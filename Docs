# 🔐 MSAuthentication - Documentação Técnica

Microserviço responsável pela **autenticação** de usuários e emissão de tokens JWT.  
Desenvolvido com ASP.NET Core, seguindo arquitetura RESTful e com suporte a roles de acesso.

---

## 📌 Visão Geral

O `MSAuthentication` atua como ponto central de autenticação no sistema, lidando com:

- Registro de usuários
- Login com validação de senha (bcrypt)
- Geração e validação de tokens JWT
- Refresh tokens (com controle de segurança)
- Logout com revogação de token via cache
- Alteração de senha
- Recuperação de conta
- Controle de perfis (roles) com enum `UserRole`

---

## ⚙️ Tecnologias Utilizadas

- ASP.NET Core 7.0+
- Entity Framework Core
- JWT Bearer Authentication
- BCrypt.Net
- AutoMapper
- Swagger (Swashbuckle)
- MySQL / SQL Server
- Middleware customizado
- CORS configurado

---

## 🧠 Estrutura de Pastas

MSAuthentication/
├── Controllers/
├── Models/
├── DTOs/
├── Services/
├── Middleware/
├── Data/
├── Config/
├── Migrations/
└── README.md

yaml
Copiar
Editar

---

## 🔐 Roles e Perfis

Enum `UserRole`:
public enum UserRole
{
    Admin,
    AdminTerceirizado,
    Portaria,
    Morador,
    Visitante
}

##🔄 Fluxos implementados

###✅ Registro
POST /api/auth/register
Cria novo usuário com senha criptografada.

###🔑 Login
POST /api/auth/login
Gera JWT e refresh token.

###🔄 Atualização de Senha
POST /api/auth/change-password

###🔐 Recuperação de Conta
POST /api/auth/forgot-password

###🚪 Logout
POST /api/auth/logout
Invalida o token via cache.

###🧪 Proteção com Middleware
Middleware AuthenticationMiddleware verifica tokens e permissões antes da execução de cada endpoint protegido.

###🔄 Em desenvolvimento
Middleware de autorização por roles

Integração com MSAuthorization

Integração com MSResidents

Front-end para gerenciamento de usuários

👩‍💻 Desenvolvido por
Vitória Gabriella
Projeto: **Eagle Monitoring**
Início: Março/2024
